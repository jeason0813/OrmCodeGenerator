Imports System.Linq
Imports System.Text
Imports System.Collections.Generic
Imports System

'------------------------------------------------------------------------------
'<auto-generated>
'    Il codice è stato generato da uno strumento.
'    Versione runtime: 12.0.0.0
' 
'    Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
'    il codice viene rigenerato.
'</auto-generated>
'------------------------------------------------------------------------------
Namespace My.Templates
    '''<summary>
    '''Class to produce the template output
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "12.0.0.0")>  _
    Partial Public Class LunaTableClassTvb
        Inherits LunaTableClassTvbBase
        '''<summary>
        '''Create the template output
        '''</summary>
        Public Overridable Function TransformText() As String
            Me.Write("#Region ""Author"""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"'*********************************"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"'LUNA ORM -"&Global.Microsoft.VisualBasic.ChrW(9)&"http://www.luna"& _ 
                    "orm.org"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"'*********************************"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"'Code created with Luna ")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\../Authorvb.tt",11)
write(My.Application.Info.Version.Major & "." & My.Application.Info.Version.Minor & "." & My.Application.Info.Version.Build & "." & My.Application.Info.Version.Revision)
            
            #End ExternalSource
            Me.Write(" "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"'Author: Diego Lunadei"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"'Date: ")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\../Authorvb.tt",13)
write(Date.Now.ToString("dd/MM/yyyy"))
            
            #End ExternalSource
            Me.Write(" "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"#End Region"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10))
            Me.Write(""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Imports System"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Imports System.Xml"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Imports System.Xml.Serialization"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Imports S"& _ 
                    "ystem.Data"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Imports System.Data.Common"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10))
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",13)

Dim ConnectionTypeS as string =""
Select Case Sorgente.TipoSorgente
                Case enDatasourceType.SQLServer
					ConnectionTypeS = "SqlConnection"
				 
            
            #End ExternalSource
            Me.Write("Imports System.Data.SqlClient"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                ")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",20)
Case enDatasourceType.Oracle
				ConnectionTypeS = "OracleConnection"
				 
            
            #End ExternalSource
            Me.Write("Imports System.Data.OracleClient"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                ")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",24)
Case Else
				ConnectionTypeS = "OleDBConnection" 
            
            #End ExternalSource
            Me.Write("Imports System.Data.OleDb"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10))
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",27)
End Select  
            
            #End ExternalSource
            Me.Write(""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"''' <summary>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"'''DAO Class for table ")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",30)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Tabella.NomeTabella))
            
            #End ExternalSource
            Me.Write(""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"''' </summary>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"''' <remarks>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"'''Don't write code here"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"''' </remarks>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Publ"& _ 
                    "ic MustInherit Class _")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",36)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Tabella.NomeClasse))
            
            #End ExternalSource
            Me.Write(""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"Inherits LUNA.LunaBaseClassEntity"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    Implements _")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",38)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Tabella.NomeInterfaccia))
            
            #End ExternalSource
            Me.Write(""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"'******IMPORTANT: Don't write your code here. Write your code in the Class obje"& _ 
                    "ct that inherits from this Class."&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"'******So you can replace this file without l"& _ 
                    "ost your code"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"Public Sub New()"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"End Sub"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"Public Sub New(myRecord As ID"& _ 
                    "ataRecord)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"FillFromDataRecord(myRecord)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"End Sub"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Public Overridable Sub F"& _ 
                    "illFromDataRecord(myRecord As IDataRecord) Implements _")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",50)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Tabella.NomeInterfaccia))
            
            #End ExternalSource
            Me.Write(".FillFromDataRecord"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     ")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",51)

    For each Campo As cCampoDb in Tabella.Campi
        If Campo.AllowDBNull Then
             
            
            #End ExternalSource
            Me.Write("        if not myRecord(""")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",55)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Campo.Nome))
            
            #End ExternalSource
            Me.Write(""") is DBNull.Value then ")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",55)
        
        end if
         
            
            #End ExternalSource
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",57)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Campo.NomeLogico))
            
            #End ExternalSource
            Me.Write(" = myRecord(""")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",57)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Campo.Nome))
            
            #End ExternalSource
            Me.Write(""")"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",58)

    next
     
            
            #End ExternalSource
            Me.Write("   "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"End Sub"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Private Property Manager As LUNA.ILunaBaseClassDAO(Of ")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",63)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Tabella.NomeClasse))
            
            #End ExternalSource
            Me.Write(")"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    Get"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        If _Mgr Is Nothing Then"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            Dim _MgrType As System.T"& _ 
                    "ype = LUNA.LunaContext.GetMgrTypeForEntity(Me.GetType)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            If _MgrType "& _ 
                    "Is Nothing Then _MgrType = GetType(")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",67)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Tabella.NomeClasseDAO))
            
            #End ExternalSource
            Me.Write(")"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            _Mgr = Activator.CreateInstance(_MgrType)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        End If"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"       "& _ 
                    " Return _Mgr"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    End Get"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    Set(value As LUNA.ILunaBaseClassDAO(Of ")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",72)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Tabella.NomeClasse))
            
            #End ExternalSource
            Me.Write("))"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        _Mgr = value"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    End Set"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"End Property"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"#Region ""Database Field Ma"& _ 
                    "p"""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10))
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",79)

    For each Campo As cCampoDb in Tabella.Campi
 
            
            #End ExternalSource
            Me.Write("Protected _")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",82)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Campo.NomeLogico))
            
            #End ExternalSource
            Me.Write(" as ")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",82)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Campo.TipoStringa))
            
            #End ExternalSource
            Me.Write(" ")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",82)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Campo.ValoreDefault))
            
            #End ExternalSource
            Me.Write(""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Public Overridable Property ")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",83)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Campo.NomeLogico))
            
            #End ExternalSource
            Me.Write("() as ")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",83)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Campo.TipoStringa))
            
            #End ExternalSource
            Me.Write("  Implements _")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",83)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Tabella.NomeInterfaccia))
            
            #End ExternalSource
            Me.Write(".")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",83)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Campo.NomeLogico))
            
            #End ExternalSource
            Me.Write(""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    Get"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"    Return _")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",85)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Campo.NomeLogico))
            
            #End ExternalSource
            Me.Write(""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    End Get"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    Set (byval value as ")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",87)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Campo.TipoStringa))
            
            #End ExternalSource
            Me.Write(")"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"    If _")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",88)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Campo.NomeLogico))
            
            #End ExternalSource
            Me.Write(" <> value Then"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"        IsChanged = True"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"        _")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",90)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Campo.NomeLogico))
            
            #End ExternalSource
            Me.Write("= value"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"    End If"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    End Set"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"End property "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10))
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",95)

    next
     
            
            #End ExternalSource
            Me.Write(""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"#End Region"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"#Region ""Method"""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"''' <summary>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"'''This method read an ")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",103)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Tabella.NomeClasse))
            
            #End ExternalSource
            Me.Write(" from DB."&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"''' </summary>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"''' <returns>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"'''Return 0 if all ok, 1 if error"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"''' "& _ 
                    "</returns>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Public Overridable Function Read(Id As Integer) As Integer"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    'Ret"& _ 
                    "urn 0 if all ok"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    Dim Ris As Integer = 0"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    Try"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"    Using Manager"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"     "& _ 
                    "   Dim int As ")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",113)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Tabella.NomeClasse))
            
            #End ExternalSource
            Me.Write(" = Manager.Read(Id)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        ")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",114)

            For each Campo As cCampoDb in Tabella.Campi
         
            
            #End ExternalSource
            Me.Write("            _")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",117)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Campo.NomeLogico))
            
            #End ExternalSource
            Me.Write(" = int.")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",117)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Campo.NomeLogico))
            
            #End ExternalSource
            Me.Write(""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        ")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",118)

            next
             
            
            #End ExternalSource
            Me.Write(""&Global.Microsoft.VisualBasic.ChrW(9)&"    End Using"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        Manager = nothing"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    Catch ex As Exception"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"    Manage"& _ 
                    "Error(ex)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"    Ris = 1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    End Try"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    Return Ris"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"End Function"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"''' <summa"& _ 
                    "ry>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"'''This method save an ")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",131)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Tabella.NomeClasse))
            
            #End ExternalSource
            Me.Write(" on DB."&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"''' </summary>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"''' <returns>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"'''Return Id insert in DB if all ok, 0 if"& _ 
                    " error"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"''' </returns>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Public Overridable Function Save() As Integer"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    'Retu"& _ 
                    "rn the id Inserted"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    Dim Ris As Integer = 0"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    Try"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"    Using Manager"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"  "& _ 
                    "      Ris = Manager.Save(Me)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"    End Using"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        Manager = nothing"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    Cat"& _ 
                    "ch ex As Exception"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"    ManageError(ex)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    End Try"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    Return Ris"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"End Funct"& _ 
                    "ion"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Protected Function InternalIsValid() As Boolean"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"Dim Ris As Boolean = Tr"& _ 
                    "ue"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9))
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",152)

    For each Campo As cCampoDb in Tabella.Campi
        If Campo.TipoStringa = "string" Then
            If Campo.AllowDBNull = False Then
 
            
            #End ExternalSource
            Me.Write("  if _")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",156)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Campo.NomeLogico))
            
            #End ExternalSource
            Me.Write(".Length = 0 then Ris = False"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10))
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",157)

            End If
            If Campo.MaxLength Then
 
            
            #End ExternalSource
            Me.Write("  if _")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",160)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Campo.NomeLogico))
            
            #End ExternalSource
            Me.Write(".Length > ")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",160)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Campo.MaxLength))
            
            #End ExternalSource
            Me.Write(" then Ris = False"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10))
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",161)

            End If
        End If
    next
     
            
            #End ExternalSource
            Me.Write(""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"Return Ris"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"End Function"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"#End Region"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"#Region ""Embedded Class"""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10))
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",174)


    For Each Rel As cRelazioneTabella In Sorgente.Relazioni
    
        If Rel.TabellaOrigine = Tabella.NomeTabella then
        'relazione diretta
            If Rel.CampoOrigine = Rel.TbOrig.CampoChiave.Nome Then
                'se sto facendo una relazione dal mio campo chiave verso un altra tabella dove dentro c'e' il mio campo chiave 
                'e' una relazione uno a N quindi torno una List Of
 
            
            #End ExternalSource
            Me.Write("'RELAZIONE DIRETTA 1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Protected _List")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",185)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Rel.TbDest.NomeClasse))
            
            #End ExternalSource
            Me.Write(" as List(Of ")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",185)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Rel.TbDest.NomeClasse))
            
            #End ExternalSource
            Me.Write(")"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"<XmlElementAttribute(""List")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",186)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Rel.TbDest.NomeClasse))
            
            #End ExternalSource
            Me.Write(""")> _"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Public Property List")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",187)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Rel.TbDest.NomeClasse))
            
            #End ExternalSource
            Me.Write("() as List(Of ")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",187)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Rel.TbDest.NomeClasse))
            
            #End ExternalSource
            Me.Write(")"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    Get"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"    If _List")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",189)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Rel.TbDest.NomeClasse))
            
            #End ExternalSource
            Me.Write(" Is Nothing Or LUNA.LunaContext.DisableLazyLoading = True Then"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"    Using Mgr A"& _ 
                    "s New ")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",190)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Rel.TbDest.NomeClasseDAO))
            
            #End ExternalSource
            Me.Write(""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"Dim Param1 As New LUNA.LunaSearchParameter(""")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",191)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Rel.CampoDestinazione))
            
            #End ExternalSource
            Me.Write(""", _")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",191)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Rel.CampoOrigine))
            
            #End ExternalSource
            Me.Write(")"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"_List")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",192)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Rel.TbDest.NomeClasse))
            
            #End ExternalSource
            Me.Write(" = Mgr.FindAll(Param1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"End Using "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"    End If"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"    Return _List")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",195)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Rel.TbDest.NomeClasse))
            
            #End ExternalSource
            Me.Write(""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    End Get"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    Set (ByVal value As List(Of ")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",197)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Rel.TbDest.NomeClasse))
            
            #End ExternalSource
            Me.Write("))"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"    _List")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",198)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Rel.TbDest.NomeClasse))
            
            #End ExternalSource
            Me.Write(" = value"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    End Set"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"End Property"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10))
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",201)

            else
                'se sto facendo una relazione non dal mio campo chiave verso un altra tabella al suo campo chiave e' una relazione 1 a 1 
                'qui anche devo caricare l'oggetto solo se non è gia caricato
                'qui devo entrarci se esiste il campo _CampoOrigine dentro la tabella destinazione
  
            
            #End ExternalSource
            Me.Write("'RELAZIONE DIRETTA 2"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"<XmlElementAttribute(""")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",208)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Rel.TbDest.NomeClasse))
            
            #End ExternalSource
            Me.Write(""")> _"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Protected _")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",209)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Rel.TbDest.NomeClasse))
            
            #End ExternalSource
            Me.Write(" As ")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",209)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Rel.TbDest.NomeClasse))
            
            #End ExternalSource
            Me.Write(""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Public property ")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",210)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Rel.TbDest.NomeClasse))
            
            #End ExternalSource
            Me.Write("() As  ")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",210)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Rel.TbDest.NomeClasse))
            
            #End ExternalSource
            Me.Write(""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    Get"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"    If _")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",212)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Rel.TbDest.NomeClasse))
            
            #End ExternalSource
            Me.Write(" Is Nothing Or LUNA.LunaContext.DisableLazyLoading = True Then"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"    Using Mgr A"& _ 
                    "s New ")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",213)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Rel.TbDest.NomeClasseDAO))
            
            #End ExternalSource
            Me.Write(""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"_")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",214)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Rel.TbDest.NomeClasse))
            
            #End ExternalSource
            Me.Write(" = Mgr.Read(_")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",214)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Rel.CampoOrigine))
            
            #End ExternalSource
            Me.Write(")"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"    End Using "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"    End If"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"    Return _")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",217)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Rel.TbDest.NomeClasse))
            
            #End ExternalSource
            Me.Write(""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    End Get"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    Set(ByVal value As ")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",219)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Rel.TbDest.NomeClasse))
            
            #End ExternalSource
            Me.Write(")"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"    _")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",220)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Rel.TbDest.NomeClasse))
            
            #End ExternalSource
            Me.Write(" = value"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"    _")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",221)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Rel.CampoOrigine))
            
            #End ExternalSource
            Me.Write(" = _")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",221)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Rel.TbDest.NomeClasse))
            
            #End ExternalSource
            Me.Write(".")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",221)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Rel.CampoOrigine))
            
            #End ExternalSource
            Me.Write(""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    End Set"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"End Property"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10))
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",225)


            end if
        elseIf Rel.TabellaDestinazione = Tabella.NomeTabella then            
        'relazione indiretta
            If Rel.CampoOrigine <> Rel.TbOrig.CampoChiave.Nome Then
             
            
            #End ExternalSource
            Me.Write("'RELAZIONE INDIRETTA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Protected _List")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",233)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Rel.TbOrig.NomeClasse))
            
            #End ExternalSource
            Me.Write(" as List(Of ")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",233)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Rel.TbOrig.NomeClasse))
            
            #End ExternalSource
            Me.Write(")"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"<XmlElementAttribute(""List")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",234)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Rel.TbOrig.NomeClasse))
            
            #End ExternalSource
            Me.Write(""")> _"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Public Property List")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",235)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Rel.TbOrig.NomeClasse))
            
            #End ExternalSource
            Me.Write("() as List(Of ")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",235)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Rel.TbOrig.NomeClasse))
            
            #End ExternalSource
            Me.Write(")"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Get"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"If _List")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",237)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Rel.TbOrig.NomeClasse))
            
            #End ExternalSource
            Me.Write(" Is Nothing Or LUNA.LunaContext.DisableLazyLoading = True Then"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"Using Mgr As Ne"& _ 
                    "w ")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",238)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Rel.TbOrig.NomeClasseDAO))
            
            #End ExternalSource
            Me.Write(""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"Dim Param1 As New LUNA.LunaSearchParameter(""")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",239)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Rel.CampoOrigine))
            
            #End ExternalSource
            Me.Write(""", _")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",239)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Rel.CampoDestinazione))
            
            #End ExternalSource
            Me.Write(")"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"_List")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",240)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Rel.TbOrig.NomeClasse))
            
            #End ExternalSource
            Me.Write(" = Mgr.FindAll(Param1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"End Using"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"End If"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"Return _List")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",243)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Rel.TbOrig.NomeClasse))
            
            #End ExternalSource
            Me.Write(""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"End Get"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Set (ByVal value As List(Of ")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",245)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Rel.TbOrig.NomeClasse))
            
            #End ExternalSource
            Me.Write("))"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"_List")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",246)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Rel.TbOrig.NomeClasse))
            
            #End ExternalSource
            Me.Write(" = value"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"End Set"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"End Property"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10))
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",250)


            end if
        end if

    Next

 
            
            #End ExternalSource
            Me.Write(""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"#End Region"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"End Class "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"''' <summary>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"'''Interface for table ")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",264)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Tabella.NomeTabella))
            
            #End ExternalSource
            Me.Write(""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"''' </summary>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"''' <remarks>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"'''Don't write code here"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"''' </remarks>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Publ"& _ 
                    "ic Interface _")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",270)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Tabella.NomeInterfaccia))
            
            #End ExternalSource
            Me.Write(""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Sub FillFromDataRecord(myRecord As IDataRecord)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"#Region ""Database Field Ma"& _ 
                    "p"""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",276)

        For each Campo As cCampoDb in Tabella.Campi
     
            
            #End ExternalSource
            Me.Write(""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    Property ")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",280)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Campo.NomeLogico))
            
            #End ExternalSource
            Me.Write("() as ")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",280)
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Campo.TipoStringa))
            
            #End ExternalSource
            Me.Write(""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ")
            
            #ExternalSource("D:\lavoro\Luna\Luna\Template\ClassEntity\LunaTableClassTvb.tt",282)

        next
         
            
            #End ExternalSource
            Me.Write(""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"#End Region"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"End Interface")
            Return Me.GenerationEnvironment.ToString
        End Function
    End Class
    #Region "Base class"
    '''<summary>
    '''Base class for this transformation
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "12.0.0.0")>  _
    Public Class LunaTableClassTvbBase
        #Region "Fields"
        Private generationEnvironmentField As Global.System.Text.StringBuilder
        Private errorsField As Global.System.CodeDom.Compiler.CompilerErrorCollection
        Private indentLengthsField As Global.System.Collections.Generic.List(Of Integer)
        Private currentIndentField As String = ""
        Private endsWithNewline As Boolean
        Private sessionField As Global.System.Collections.Generic.IDictionary(Of String, Object)
        #End Region
        #Region "Properties"
        '''<summary>
        '''The string builder that generation-time code is using to assemble generated output
        '''</summary>
        Protected Property GenerationEnvironment() As System.Text.StringBuilder
            Get
                If (Me.generationEnvironmentField Is Nothing) Then
                    Me.generationEnvironmentField = New Global.System.Text.StringBuilder()
                End If
                Return Me.generationEnvironmentField
            End Get
            Set
                Me.generationEnvironmentField = value
            End Set
        End Property
        '''<summary>
        '''The error collection for the generation process
        '''</summary>
        Public ReadOnly Property Errors() As System.CodeDom.Compiler.CompilerErrorCollection
            Get
                If (Me.errorsField Is Nothing) Then
                    Me.errorsField = New Global.System.CodeDom.Compiler.CompilerErrorCollection()
                End If
                Return Me.errorsField
            End Get
        End Property
        '''<summary>
        '''A list of the lengths of each indent that was added with PushIndent
        '''</summary>
        Private ReadOnly Property indentLengths() As System.Collections.Generic.List(Of Integer)
            Get
                If (Me.indentLengthsField Is Nothing) Then
                    Me.indentLengthsField = New Global.System.Collections.Generic.List(Of Integer)()
                End If
                Return Me.indentLengthsField
            End Get
        End Property
        '''<summary>
        '''Gets the current indent we use when adding lines to the output
        '''</summary>
        Public ReadOnly Property CurrentIndent() As String
            Get
                Return Me.currentIndentField
            End Get
        End Property
        '''<summary>
        '''Current transformation session
        '''</summary>
        Public Overridable Property Session() As Global.System.Collections.Generic.IDictionary(Of String, Object)
            Get
                Return Me.sessionField
            End Get
            Set
                Me.sessionField = value
            End Set
        End Property
        #End Region
        #Region "Transform-time helpers"
        '''<summary>
        '''Write text directly into the generated output
        '''</summary>
        Public Overloads Sub Write(ByVal textToAppend As String)
            If String.IsNullOrEmpty(textToAppend) Then
                Return
            End If
            'If we're starting off, or if the previous text ended with a newline,
            'we have to append the current indent first.
            If ((Me.GenerationEnvironment.Length = 0)  _
                        OrElse Me.endsWithNewline) Then
                Me.GenerationEnvironment.Append(Me.currentIndentField)
                Me.endsWithNewline = false
            End If
            'Check if the current text ends with a newline
            If textToAppend.EndsWith(Global.System.Environment.NewLine, Global.System.StringComparison.CurrentCulture) Then
                Me.endsWithNewline = true
            End If
            'This is an optimization. If the current indent is "", then we don't have to do any
            'of the more complex stuff further down.
            If (Me.currentIndentField.Length = 0) Then
                Me.GenerationEnvironment.Append(textToAppend)
                Return
            End If
            'Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(Global.System.Environment.NewLine, (Global.System.Environment.NewLine + Me.currentIndentField))
            'If the text ends with a newline, then we should strip off the indent added at the very end
            'because the appropriate indent will be added when the next time Write() is called
            If Me.endsWithNewline Then
                Me.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - Me.currentIndentField.Length))
            Else
                Me.GenerationEnvironment.Append(textToAppend)
            End If
        End Sub
        '''<summary>
        '''Write text directly into the generated output
        '''</summary>
        Public Overloads Sub WriteLine(ByVal textToAppend As String)
            Me.Write(textToAppend)
            Me.GenerationEnvironment.AppendLine
            Me.endsWithNewline = true
        End Sub
        '''<summary>
        '''Write formatted text directly into the generated output
        '''</summary>
        Public Overloads Sub Write(ByVal format As String, <System.ParamArrayAttribute()> ByVal args() As Object)
            Me.Write(String.Format(Global.System.Globalization.CultureInfo.CurrentCulture, format, args))
        End Sub
        '''<summary>
        '''Write formatted text directly into the generated output
        '''</summary>
        Public Overloads Sub WriteLine(ByVal format As String, <System.ParamArrayAttribute()> ByVal args() As Object)
            Me.WriteLine(String.Format(Global.System.Globalization.CultureInfo.CurrentCulture, format, args))
        End Sub
        '''<summary>
        '''Raise an error
        '''</summary>
        Public Sub [Error](ByVal message As String)
            Dim [error] As System.CodeDom.Compiler.CompilerError = New Global.System.CodeDom.Compiler.CompilerError()
            [error].ErrorText = message
            Me.Errors.Add([error])
        End Sub
        '''<summary>
        '''Raise a warning
        '''</summary>
        Public Sub Warning(ByVal message As String)
            Dim [error] As System.CodeDom.Compiler.CompilerError = New Global.System.CodeDom.Compiler.CompilerError()
            [error].ErrorText = message
            [error].IsWarning = true
            Me.Errors.Add([error])
        End Sub
        '''<summary>
        '''Increase the indent
        '''</summary>
        Public Sub PushIndent(ByVal indent As String)
            If (indent = Nothing) Then
                Throw New Global.System.ArgumentNullException("indent")
            End If
            Me.currentIndentField = (Me.currentIndentField + indent)
            Me.indentLengths.Add(indent.Length)
        End Sub
        '''<summary>
        '''Remove the last indent that was added with PushIndent
        '''</summary>
        Public Function PopIndent() As String
            Dim returnValue As String = ""
            If (Me.indentLengths.Count > 0) Then
                Dim indentLength As Integer = Me.indentLengths((Me.indentLengths.Count - 1))
                Me.indentLengths.RemoveAt((Me.indentLengths.Count - 1))
                If (indentLength > 0) Then
                    returnValue = Me.currentIndentField.Substring((Me.currentIndentField.Length - indentLength))
                    Me.currentIndentField = Me.currentIndentField.Remove((Me.currentIndentField.Length - indentLength))
                End If
            End If
            Return returnValue
        End Function
        '''<summary>
        '''Remove any indentation
        '''</summary>
        Public Sub ClearIndent()
            Me.indentLengths.Clear
            Me.currentIndentField = ""
        End Sub
        #End Region
        #Region "ToString Helpers"
        '''<summary>
        '''Utility class to produce culture-oriented representation of an object as a string.
        '''</summary>
        Public Class ToStringInstanceHelper
            Private formatProviderField  As System.IFormatProvider = Global.System.Globalization.CultureInfo.InvariantCulture
            '''<summary>
            '''Gets or sets format provider to be used by ToStringWithCulture method.
            '''</summary>
            Public Property FormatProvider() As System.IFormatProvider
                Get
                    Return Me.formatProviderField 
                End Get
                Set
                    If (Not (value) Is Nothing) Then
                        Me.formatProviderField  = value
                    End If
                End Set
            End Property
            '''<summary>
            '''This is called from the compile/run appdomain to convert objects within an expression block to a string
            '''</summary>
            Public Function ToStringWithCulture(ByVal objectToConvert As Object) As String
                If (objectToConvert Is Nothing) Then
                    Throw New Global.System.ArgumentNullException("objectToConvert")
                End If
                Dim t As System.Type = objectToConvert.GetType
                Dim method As System.Reflection.MethodInfo = t.GetMethod("ToString", New System.Type() {GetType(System.IFormatProvider)})
                If (method Is Nothing) Then
                    Return objectToConvert.ToString
                Else
                    Return CType(method.Invoke(objectToConvert, New Object() {Me.formatProviderField }),String)
                End If
            End Function
        End Class
        Private toStringHelperField As ToStringInstanceHelper = New ToStringInstanceHelper()
        '''<summary>
        '''Helper to produce culture-oriented representation of an object as a string
        '''</summary>
        Public ReadOnly Property ToStringHelper() As ToStringInstanceHelper
            Get
                Return Me.toStringHelperField
            End Get
        End Property
        #End Region
    End Class
    #End Region
End Namespace
